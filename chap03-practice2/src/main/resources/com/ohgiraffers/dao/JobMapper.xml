<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    remix Mapper
    1. DAO 인터페이스와 동일한 패키지에 위치해야 한다.
    2. DAO 인터페이스의 풀네임을 namespace로 지정해야 한다.
    3. mapper 인터페이스와 xml의 이름이 동일해야 한다.
    (MenuMapper.xml -> MenuMapper.interface)
    4. 작성한 메소드의 이름과 아이디가 일치하고, 리턴 타입이 일치하는 쿼리문을 모두 작성해야 한다.
-->

<mapper namespace="com.ohgiraffers.dao.JobMapper">
    <resultMap id="jobResultMap" type="com.ohgiraffers.dto.JobDTO">
        <result property="jobCode" column="JOB_CODE"/>
        <result property="jobName" column="JOB_NAME"/>
    </resultMap>

    <select id="selectAllJob" resultMap="jobResultMap">
        select JOB_CODE,
        JOB_NAME
        from job
    </select>

    <select id="selectJobByCode" parameterType="String" resultMap="jobResultMap">
        select JOB_CODE,
        JOB_NAME
        from job
        where JOB_CODE = #{ code }

    </select>

    <select id="selectJobByName" parameterType="String" resultMap="jobResultMap">
        select JOB_CODE,
        JOB_NAME
        from job
        where JOB_NAME = #{ name }
    </select>

    <insert id="insertJob" parameterType="com.ohgiraffers.dto.JobDTO">
        insert into job(
        JOB_CODE,
        JOB_NAME
        ) values (
        #{ jobCode },
        #{ jobName }
        )
    </insert>

    <update id="modifyJob" parameterType="com.ohgiraffers.dto.JobDTO">
        update job
        set
        JOB_NAME = #{ jobName }
        where
        JOB_CODE = #{ jobCode }
    </update>

    <delete id="deleteJob" parameterType="com.ohgiraffers.dto.JobDTO">
        delete
        from job
        where JOB_CODE = #{ jobCode }
    </delete>

</mapper>